{"version":3,"file":"MSC3906Rendezvous.js","names":["UnstableValue","LegacyRendezvousFailureReason","RendezvousFailureReason","RendezvousIntent","GET_LOGIN_TOKEN_CAPABILITY","buildFeatureSupportMap","Feature","ServerSupport","logger","sleep","CrossSigningKey","PayloadType","Outcome","LOGIN_TOKEN_PROTOCOL","MSC3906Rendezvous","constructor","channel","client","onFailure","_defineProperty","RECIPROCATE_LOGIN_ON_EXISTING_DEVICE","code","_code","generateCode","_this","_asyncToGenerator","JSON","stringify","ourIntent","startAfterShowingCode","_this2","checksum","connect","info","concat","capabilities","getCapabilities","e","features","getVersions","capability","findIn","enabled","get","LoginTokenRequest","Unsupported","send","type","Finish","outcome","cancel","HomeserverLacksSupport","undefined","Progress","protocols","name","protocol","receive","UnsupportedAlgorithm","Unknown","matches","_this3","payload","_this4","declineLoginOnExistingDevice","_this5","Declined","approveLoginOnExistingDevice","loginToken","_this6","login_token","homeserver","baseUrl","res","device_id","deviceId","device_key","deviceKey","Error","newDeviceId","newDeviceKey","verifyAndCrossSignDevice","deviceInfo","_this7","_yield$crypto$getCros","crypto","getCrypto","getFingerprint","userId","getSafeUserId","setDeviceVerified","crossSignDevice","masterPublicKey","getCrossSigningKeyId","Master","ourDeviceId","getDeviceId","ourDeviceKey","getOwnDeviceKeys","ed25519","Verified","verifying_device_id","verifying_device_key","master_key","verifyNewDeviceOnExistingDevice","_arguments","arguments","_this8","timeout","length","getOwnDevice","_this9","_ownDeviceInfo$get","ownDeviceInfo","getUserDeviceInfo","reason","_this10","_this10$onFailure","call","close","_this11"],"sources":["../../src/rendezvous/MSC3906Rendezvous.ts"],"sourcesContent":["/*\nCopyright 2022 The Matrix.org Foundation C.I.C.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n*/\n\nimport { UnstableValue } from \"matrix-events-sdk\";\n\nimport {\n    RendezvousChannel,\n    RendezvousFailureListener,\n    LegacyRendezvousFailureReason as RendezvousFailureReason,\n    RendezvousIntent,\n} from \"./index.ts\";\nimport { MatrixClient, GET_LOGIN_TOKEN_CAPABILITY } from \"../client.ts\";\nimport { buildFeatureSupportMap, Feature, ServerSupport } from \"../feature.ts\";\nimport { logger } from \"../logger.ts\";\nimport { sleep } from \"../utils.ts\";\nimport { CrossSigningKey } from \"../crypto-api/index.ts\";\nimport { Capabilities, Device, IGetLoginTokenCapability } from \"../matrix.ts\";\n\nenum PayloadType {\n    Start = \"m.login.start\",\n    Finish = \"m.login.finish\",\n    Progress = \"m.login.progress\",\n}\n\nenum Outcome {\n    Success = \"success\",\n    Failure = \"failure\",\n    Verified = \"verified\",\n    Declined = \"declined\",\n    Unsupported = \"unsupported\",\n}\n\nexport interface MSC3906RendezvousPayload {\n    type: PayloadType;\n    intent?: RendezvousIntent;\n    outcome?: Outcome;\n    device_id?: string;\n    device_key?: string;\n    verifying_device_id?: string;\n    verifying_device_key?: string;\n    master_key?: string;\n    protocols?: string[];\n    protocol?: string;\n    login_token?: string;\n    homeserver?: string;\n}\n\nconst LOGIN_TOKEN_PROTOCOL = new UnstableValue(\"login_token\", \"org.matrix.msc3906.login_token\");\n\n/**\n * Implements MSC3906 to allow a user to sign in on a new device using QR code.\n * This implementation only supports generating a QR code on a device that is already signed in.\n * Note that this is UNSTABLE and may have breaking changes without notice.\n * MSC3886/MSC3903/MSC3906 are now closed and so this functionality will be removed in future.\n * However, we want to keep this implementation around for some time.\n * TODO: define an end-of-life date for this implementation.\n */\nexport class MSC3906Rendezvous {\n    private newDeviceId?: string;\n    private newDeviceKey?: string;\n    private ourIntent: RendezvousIntent = RendezvousIntent.RECIPROCATE_LOGIN_ON_EXISTING_DEVICE;\n    private _code?: string;\n\n    /**\n     * @param channel - The secure channel used for communication\n     * @param client - The Matrix client in used on the device already logged in\n     * @param onFailure - Callback for when the rendezvous fails\n     */\n    public constructor(\n        private channel: RendezvousChannel<MSC3906RendezvousPayload>,\n        private client: MatrixClient,\n        public onFailure?: RendezvousFailureListener,\n    ) {}\n\n    /**\n     * Returns the code representing the rendezvous suitable for rendering in a QR code or undefined if not generated yet.\n     */\n    public get code(): string | undefined {\n        return this._code;\n    }\n\n    /**\n     * Generate the code including doing partial set up of the channel where required.\n     */\n    public async generateCode(): Promise<void> {\n        if (this._code) {\n            return;\n        }\n\n        this._code = JSON.stringify(await this.channel.generateCode(this.ourIntent));\n    }\n\n    public async startAfterShowingCode(): Promise<string | undefined> {\n        const checksum = await this.channel.connect();\n\n        logger.info(`Connected to secure channel with checksum: ${checksum} our intent is ${this.ourIntent}`);\n\n        // in stable and unstable r1 the availability is exposed as a capability\n        let capabilities: Capabilities = {};\n        try {\n            capabilities = await this.client.getCapabilities();\n        } catch (e) {}\n        // in r0 of MSC3882 the availability is exposed as a feature flag\n        const features = await buildFeatureSupportMap(await this.client.getVersions());\n        const capability = GET_LOGIN_TOKEN_CAPABILITY.findIn<IGetLoginTokenCapability>(capabilities);\n\n        // determine available protocols\n        if (!capability?.enabled && features.get(Feature.LoginTokenRequest) === ServerSupport.Unsupported) {\n            logger.info(\"Server doesn't support get_login_token\");\n            await this.send({ type: PayloadType.Finish, outcome: Outcome.Unsupported });\n            await this.cancel(RendezvousFailureReason.HomeserverLacksSupport);\n            return undefined;\n        }\n\n        await this.send({ type: PayloadType.Progress, protocols: [LOGIN_TOKEN_PROTOCOL.name] });\n\n        logger.info(\"Waiting for other device to choose protocol\");\n        const { type, protocol, outcome } = await this.receive();\n\n        if (type === PayloadType.Finish) {\n            // new device decided not to complete\n            switch (outcome ?? \"\") {\n                case \"unsupported\":\n                    await this.cancel(RendezvousFailureReason.UnsupportedAlgorithm);\n                    break;\n                default:\n                    await this.cancel(RendezvousFailureReason.Unknown);\n            }\n            return undefined;\n        }\n\n        if (type !== PayloadType.Progress) {\n            await this.cancel(RendezvousFailureReason.Unknown);\n            return undefined;\n        }\n\n        if (!protocol || !LOGIN_TOKEN_PROTOCOL.matches(protocol)) {\n            await this.cancel(RendezvousFailureReason.UnsupportedAlgorithm);\n            return undefined;\n        }\n\n        return checksum;\n    }\n\n    private async receive(): Promise<MSC3906RendezvousPayload> {\n        return (await this.channel.receive()) as MSC3906RendezvousPayload;\n    }\n\n    private async send(payload: MSC3906RendezvousPayload): Promise<void> {\n        await this.channel.send(payload);\n    }\n\n    public async declineLoginOnExistingDevice(): Promise<void> {\n        logger.info(\"User declined sign in\");\n        await this.send({ type: PayloadType.Finish, outcome: Outcome.Declined });\n    }\n\n    public async approveLoginOnExistingDevice(loginToken: string): Promise<string | undefined> {\n        // eslint-disable-next-line camelcase\n        await this.send({ type: PayloadType.Progress, login_token: loginToken, homeserver: this.client.baseUrl });\n\n        logger.info(\"Waiting for outcome\");\n        const res = await this.receive();\n        if (!res) {\n            return undefined;\n        }\n        const { outcome, device_id: deviceId, device_key: deviceKey } = res;\n\n        if (outcome !== \"success\") {\n            throw new Error(\"Linking failed\");\n        }\n\n        this.newDeviceId = deviceId;\n        this.newDeviceKey = deviceKey;\n\n        return deviceId;\n    }\n\n    private async verifyAndCrossSignDevice(deviceInfo: Device): Promise<void> {\n        const crypto = this.client.getCrypto()!;\n\n        if (!this.newDeviceId) {\n            throw new Error(\"No new device ID set\");\n        }\n\n        // check that keys received from the server for the new device match those received from the device itself\n        if (deviceInfo.getFingerprint() !== this.newDeviceKey) {\n            throw new Error(\n                `New device has different keys than expected: ${this.newDeviceKey} vs ${deviceInfo.getFingerprint()}`,\n            );\n        }\n\n        const userId = this.client.getSafeUserId();\n\n        // mark the device as verified locally + cross sign\n        logger.info(`Marking device ${this.newDeviceId} as verified`);\n        await crypto.setDeviceVerified(userId, this.newDeviceId, true);\n        await crypto.crossSignDevice(this.newDeviceId);\n\n        const masterPublicKey = (await crypto.getCrossSigningKeyId(CrossSigningKey.Master)) ?? undefined;\n\n        const ourDeviceId = this.client.getDeviceId()!;\n        const ourDeviceKey = (await crypto.getOwnDeviceKeys()).ed25519;\n\n        await this.send({\n            type: PayloadType.Finish,\n            outcome: Outcome.Verified,\n            verifying_device_id: ourDeviceId,\n            verifying_device_key: ourDeviceKey,\n            master_key: masterPublicKey,\n        });\n    }\n\n    /**\n     * Verify the device and cross-sign it.\n     * @param timeout - time in milliseconds to wait for device to come online\n     */\n    public async verifyNewDeviceOnExistingDevice(timeout = 10 * 1000): Promise<void> {\n        if (!this.newDeviceId) {\n            throw new Error(\"No new device to sign\");\n        }\n\n        if (!this.newDeviceKey) {\n            logger.info(\"No new device key to sign\");\n            return undefined;\n        }\n\n        const crypto = this.client.getCrypto();\n        if (!crypto) {\n            throw new Error(\"Crypto not available on client\");\n        }\n\n        let deviceInfo = await this.getOwnDevice(this.newDeviceId);\n\n        if (!deviceInfo) {\n            logger.info(\"Going to wait for new device to be online\");\n            await sleep(timeout);\n            deviceInfo = await this.getOwnDevice(this.newDeviceId);\n        }\n\n        if (deviceInfo) {\n            await this.verifyAndCrossSignDevice(deviceInfo);\n            return;\n        }\n\n        throw new Error(\"Device not online within timeout\");\n    }\n\n    private async getOwnDevice(deviceId: string): Promise<Device | undefined> {\n        const userId = this.client.getSafeUserId();\n        const ownDeviceInfo = await this.client.getCrypto()!.getUserDeviceInfo([userId]);\n        return ownDeviceInfo.get(userId)?.get(deviceId);\n    }\n\n    public async cancel(reason: RendezvousFailureReason): Promise<void> {\n        this.onFailure?.(reason);\n        await this.channel.cancel(reason);\n    }\n\n    public async close(): Promise<void> {\n        await this.channel.close();\n    }\n}\n"],"mappings":"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","ignoreList":[]}